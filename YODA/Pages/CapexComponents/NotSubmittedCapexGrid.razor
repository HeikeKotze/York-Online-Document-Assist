@using YODA.Repos
@using YODA.Repos.Models;
@using YODA.Services

@inject ICapexFormService capexService
@inject SharedDataService shareddataService
@inject NavigationManager navManager

<div class="row">
    <div class="alert alert-success">
    <WhiteContainer>
        @if (capexforms is null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Capex ID</th>
                        <th>Capex Title</th>
                        <th>Initiator</th>
                        <th>Edit</th>
                        <th>Withdraw</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var capex in capexforms)
                    {
                        <tr>
                            <td>@capex.CapexId</td>
                            <td>@capex.CapexTitle</td>
                            <td>@capex.Initiator</td>
                            <td><button id="btnEdit" @onclick="()=>GetCellValueForEdit(capexforms.IndexOf(capex))" class="btn btn-dark" style="height:30px; width:fit-content; font-size:12px; padding:5px">Edit</button></td>
                            <td><button id="btnWithdraw" @onclick="()=>GetCellValueForWithdraw(capexforms.IndexOf(capex))" class="btn btn-dark" style="height:30px; width:fit-content; font-size:12px; padding:5px">Withdraw</button></td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </WhiteContainer>
    </div>
</div>

<Blazorise.Modal @ref="modalRef">
    <Blazorise.ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Withdraw Capex Form</ModalTitle>
        </ModalHeader>
        <ModalBody>
            <div style="text-align:center; max-width:100%; align-content:center; margin: 0 auto;">
                <div class="alert alert-danger" role="alert">
                    Are you sure you want to withdraw this form?
                </div>
                <div class="container">
                    <div class="row">
                        <p>Please provide your credentials.</p>
                    </div>
                </div>
            </div>
            <Blazorise.Field>
                <FieldLabel>UserName</FieldLabel>
                <input type="text" class="form-control" @bind-value="usernameinsert" placeholder="Enter UserName..." />
            </Blazorise.Field>
            <div>
                <br />
            </div>
            <Blazorise.Field>
                <FieldLabel>Password</FieldLabel>
                <input type="password" class="form-control" @bind-value="passwordinsert" placeholder="Enter Password..." style="margin-bottom:10px"/>
            </Blazorise.Field>
        </ModalBody>
        <div style="text-align:center; max-width:40%; align-content:center; margin: 0 auto; margin-bottom:10px">
             <div class="container">
                 <div class="row">
                    <button @onclick="withdrawClicked" class="btn btn-dark">Withdraw</button>
                 </div>
             </div>
        </div>
        <ModalFooter>
            <button @onclick="HideModal" class="btn btn-dark" style="height:30px; width:fit-content; font-size:12px; padding:5px;">Back</button>
        </ModalFooter>
    </Blazorise.ModalContent>
</Blazorise.Modal>

@code {
    //Variables---------------------------------------------------------------
    private List<CapexForm> capexforms = new();

    private string usernameinsert = string.Empty;
    private string passwordinsert = string.Empty;
    private CapexUser user = new();

    private int selectedRowIndex = -1;
    private int selectedColumnIndex = 0;

    public int c = 0;

    //Initailize page---------------------------------------------------------
    protected override void OnInitialized()
    {
        capexforms = capexService.GetCapexForNotSubmittedInitiator(shareddataService.UserName);
    }

    //Withdraw capex from database--------------------------------------------
    public void withdrawClicked()
    {
        ShowModal();
        if (int.TryParse(shareddataService.capexid, out int outint))
        {
            c = outint;
        }
        if (usernameinsert == shareddataService.UserName && passwordinsert == shareddataService.Password)
        {
            capexService.WithdrawCapex(c);
        }
        HideModal();
        StateHasChanged();
    }

    
    //Get specific capexid for edit button------------------------------------
    private void GetCellValueForEdit(int rowIndex)
    {
        if (rowIndex >= 0 && rowIndex < capexforms.Count)
        {
            selectedRowIndex = rowIndex;
            var selectedItem = capexforms[selectedRowIndex];
            string cellValue = selectedColumnIndex switch
            {
                0 => selectedItem.CapexId.ToString(),
                1 => selectedItem.CapexTitle.ToString(),
                2 => selectedItem.Initiator.ToString(),
                _ => "Invalid Column Index",
            };
            shareddataService.capexid = cellValue;
            navToEdit();
        }

    }

    //Get specific capexid for withdraw button------------------------------------
    private void GetCellValueForWithdraw(int rowIndex)
    {
        if (rowIndex >= 0 && rowIndex < capexforms.Count)
        {
            selectedRowIndex = rowIndex;
            var selectedItem = capexforms[selectedRowIndex];
            string cellValue = selectedColumnIndex switch
            {
                0 => selectedItem.CapexId.ToString(),
                1 => selectedItem.CapexTitle.ToString(),
                2 => selectedItem.Initiator.ToString(),
                _ => "Invalid Column Index",
            };
            shareddataService.capexid = cellValue;
        }
        ShowModal();

    }

    //Modals------------------------------------------------------------------------
    private Blazorise.Modal modalRef = new();

    private Task ShowModal()
    {
        return modalRef.Show();
    }

    private Task HideModal()
    {
        return modalRef.Hide();
    }

    public void navToEdit()
    {
        navManager.NavigateTo("/Capex/Edit");
    }

    

}
